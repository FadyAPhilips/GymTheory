when date change / on load
    get workouts by date
        GET /user/{userID}/workout/
            need: date and userID
                lambda-alg:
                    1) retrieve data from route
                    2) search db for row with key userID-date
                    3) if found, return data; else return empty
                    4) send data back to requester

search result is selected
    add new exercise
        POST /user/{userID}/workout/exercise/{exerciseID}
            needs: exerciseID, userID, date
                lambda-alg:
                    1) retrieve data from route
                    2) search db for row with key userID-date
                    3) if found, return data; else create row with key userID-date
                    4) add new exercise to data
                    5) put data back in db

remove workout button pressed
    removes exercise
        DELETE /user/{userID}/workout/exercise/{exerciseID}
            needs: exerciseID, userID, date
                lambda-alg:
                    1) retrieve data from route
                    2) search db for row with key userID-date
                    3) return data
                    4) remove specified exercise from data
                    5) put data back in db

user changes reps input, user changes weight input, user removes set, user adds set
    modify an exercise
        PUT /user/{userID}/workout/exercise/{exerciseID}
            needs: exerciseID, userID, date, newData
                lambda-alg:
                    1) retrieve data from route
                    2) search db for row with key userID-date
                    3) return data
                    4) set specified exercise to new exercise data
                    5) put data back in db



update global state on remove

get phone id

Possibly add about page